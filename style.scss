@font-face {
  font-family: "Boogaloo";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Boogaloo Regular"), local("Boogaloo-Regular"),
    url(/font/kmK-Zq45GAvOdnaW6y1C9ys.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,
    U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215,
    U+FEFF, U+FFFD;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

// main variables
$primary-color: #33ca7f;
$primary-color-dark: #0c8346;
$secondary-color: #71f79f;
$action-color: #e9d985;
$circle-color: #dee5e5;
$text-color: black;
$text-color: #151919;
$bg-color: #fcefef;

$animation-time: 1s;

html {
  font-size: 62.5%;
  background-color: $bg-color;
}

body {
  width: 100%;
  overflow-x: hidden;
  font-family: "Boogaloo", sans-serif;
  color: $text-color;

  .loader {
    display: none;
  }

  &.loading {
    $loader-bg: #fcefef;
    $loader-left: #06d6a0;
    $loader-right: #33ca7f;
    $loader-middle: #71f79f;
    overflow: hidden;

    .loader-container {
      position: absolute;
      width: 100%;
      height: 100%;
      background-color: $bg-color;
      z-index: 10;
    }

    .loader {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      transform-style: preserve-3d;
      z-index: 100;
    }

    .loader__item {
      position: relative;
      width: 10rem;
      height: 10rem;
      border-radius: 50%;
      background-color: $loader-middle;
    }

    .loader__item::before,
    .loader__item::after {
      content: "";
      position: absolute;
      top: 0;
      width: 10rem;
      height: 10rem;
      border-radius: 50%;
    }

    .loader__item::before {
      left: -30%;
      background-color: $loader-left;
      animation: animation-left 2s ease infinite;
    }

    .loader__item::after {
      right: -30%;
      background-color: $loader-right;
      transform: perspective(100px) translate3d(0, 0, -1px);
      animation: animation-right 2s ease infinite;
    }

    @keyframes animation-left {
      0% {
        transform: perspective(100px) translate3d(0, 0, 0);
      }

      25% {
        transform: perspective(100px) translate3d(-100%, 0, 0);
      }

      50% {
        transform: perspective(100px) translate3d(0, 0, -1px);
      }

      75% {
        transform: perspective(100px) translate3d(-100%, 0, 0);
      }

      100% {
        transform: perspective(100px) translate3d(0, 0, 0);
      }
    }

    @keyframes animation-right {
      0% {
        transform: perspective(100px) translate3d(0, 0, -1px);
      }

      25% {
        transform: perspective(100px) translate3d(100%, 0, 0);
      }

      50% {
        transform: perspective(100px) translate3d(0, 0, 0);
      }

      75% {
        transform: perspective(100px) translate3d(100%, 0, 0);
      }

      100% {
        transform: perspective(100px) translate3d(0, 0, -1px);
      }
    }

    .circle {
      animation: none;
    }

    .text-container {
      animation: none;
    }

    .keyboard {
      animation: none;
    }

    .guitar {
      animation: none;
    }

    .btn {
      animation: none;
      pointer-events: none;
    }

    .heading {
      animation: none;
    }
  }

  &.error {
    .error-msg {
      position: absolute;
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 3rem;
      z-index: 10;
    }
  }
}

.error-msg {
  display: none;
}

.header-text {
  width: 40rem;
  margin: 2rem auto;
  text-align: center;
  font-size: 2.5rem;
}

.wrapper {
  position: relative;
  margin: 2rem auto;
  padding: 0.8rem;
  width: 40rem;
}

#pointer {
  position: absolute;
  left: 50%;
  width: 0;
  height: 0;
  transform: translateX(-50%);
  border-left: 2rem solid transparent;
  border-right: 2rem solid transparent;
  border-top: 2rem solid $primary-color;
}

.scale-btns {
  position: absolute;
  top: 20rem;
  left: 20rem;
  transform: translate(-50%, calc(-50% + 2rem));
  width: 18rem;
  height: 18rem;
  border-radius: 50%;

  .btn-maj {
    border-top-left-radius: 18rem;
    border-top-right-radius: 18rem;
  }

  .btn-min {
    border-bottom-left-radius: 18rem;
    border-bottom-right-radius: 18rem;
  }

  .btn-pressed {
    color: white;
    background-color: $primary-color-dark;
  }
}

.keyboard {
  position: relative;
  width: 40rem;
  height: 33rem;
  margin-bottom: 2rem;
  font-size: 0;
  opacity: 0;
  animation: appear 1s $animation-time ease forwards; 

  &::before {
    content: "";
    position: absolute;
    top: -0.5rem;
    z-index: 1;
    width: 100%;
    height: 0.5rem;
    background: $bg-color;
  }
}

.key {
  display: inline-block;
  width: 13.5%;
  height: 100%;
  border: 1px solid black;
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
  box-shadow: inset 0px 0px 5px;
  cursor: pointer;

  &.on-left-button {
    background: $action-color;
  }
}

.key-half {
  position: absolute;
  top: 0;
  width: 6%;
  height: 60%;
  transform: translateX(-50%);
  background-color: black;
  background: linear-gradient(black, #3b444b);
  box-shadow: 0px 0px 5px;
}

.key-pressed {
  background: $primary-color;
}

.circle {
  box-sizing: border-box;
  width: 36rem;
  height: 36rem;
  margin: 3rem auto 0;
  background-color: $circle-color;
  border-radius: 50%;
  transition: transform 0.3s ease-out;
  animation: spin $animation-time ease;

  @keyframes spin {
    0% {
      transform: rotate(0);
    }

    100% {
      transform: rotate(360deg);
    }
  }

  &-items {
    position: relative;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
  }

  .circle-item {
    position: absolute;
    box-sizing: border-box;
    top: 0;
    left: 50%;
    display: block;
    height: 50%;
    width: 2rem;
    padding-top: 1rem;
    transform-origin: bottom center;
    font-size: 3rem;
    outline: none;

    &:hover {
      &::after {
        cursor: pointer;
      }
    }

    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: -50%;
      width: 200%;
      height: 50%;
      display: block;
      padding: 1rem;
    }

    @for $i from 1 through 12 {
      &:nth-child(#{$i}) {
        transform: translateX(-50%) rotate(calc(30deg * #{$i - 1}));
      }
    }
  }

  .small {
    text-transform: lowercase;
  }
}

.text-container {
  opacity: 0;
  animation: appear 1s $animation-time ease forwards; 
}

.btn {
  width: 18rem;
  height: 9rem;
  font-size: 3rem;
  font-family: inherit;
  text-transform: uppercase;
  background-color: $secondary-color;
  border: none;
  outline: none;
  cursor: pointer;
  transition: opacity 0.3 ease;
  opacity: 0;
  animation: appear 1s $animation-time ease forwards; 

  &:hover, &:focus {
    opacity: 0.8;
  }
}

.clear-btn {
  display: block;
  width: 15rem;
  height: 2em;
  margin: 0 auto 2rem;
  font-size: 2rem;
  line-height: 1.4;
  border-radius: 5px;
}

.text-output,
.chords-output,
.piano-text,
.guitar-text {
  display: block;
  margin: 2rem auto;
  width: 100%;
  font-size: 2.4rem;
  opacity: 0;
  animation: appear 1s $animation-time ease forwards; 
}

.chord-progression {
  list-style: none;
}

.is-hidden {
  display: none;
}

.disable-select {
  user-select: none;
}

// guitar variables
$guitar-neck-width: 40rem;
$guitar-neck-height: 15rem;
$guitar-neck-padding: 0.5rem;
$border-weight: 0.2rem;
$string-mark-radius: 2rem;

$guitar-neck-color: #d5b17b;
$guitar-neck-border-color: #b79358;
$strings-color: #dccbaf;
$string-weight: 0.3rem;
$fret-line-color: #ede4c7;
$fret-line-weight: 0.3rem;

.guitar {
  opacity: 0;
  animation: appear 1s $animation-time ease forwards; 
}

.guitar-neck {
  position: relative;
  box-sizing: content-box;
  width: $guitar-neck-width;
  height: $guitar-neck-height;
  margin: 5rem auto 2rem;
  padding: $guitar-neck-padding 0;
  border: $border-weight solid $guitar-neck-border-color;
  border-right: none;
  border-left: none;
  background-color: $guitar-neck-color;
  box-shadow: 0 0 3px black;
  cursor: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='25pt' height='28pt' viewBox='0 0 25 28' version='1.1'%3E%3Cg id='surface1'%3E%3Cpath style=' stroke:none;fill-rule:nonzero;fill:rgb(0%25,0%25,0%25);fill-opacity:1;' d='M 22.382812 2.960938 C 21.09375 1.835938 19.523438 1.132812 17.8125 0.710938 C 17.382812 0.570312 14.667969 0.0117188 12.671875 0.0117188 C 12.671875 0.0117188 12.527344 0.0117188 12.382812 0.0117188 C 12.382812 0.0117188 12.242188 0.0117188 12.097656 0.0117188 C 10.097656 0.0117188 7.242188 0.570312 6.816406 0.710938 C 5.242188 1.132812 3.671875 1.835938 2.386719 2.960938 C -0.46875 5.484375 -0.46875 9.417969 0.960938 12.644531 C 2.386719 16.15625 3.957031 19.242188 6.101562 22.332031 C 7.8125 24.71875 9.671875 28.085938 12.382812 28.085938 C 15.097656 28.085938 16.953125 24.71875 18.808594 22.332031 C 20.953125 19.382812 22.523438 16.15625 23.949219 12.644531 C 25.238281 9.417969 25.238281 5.484375 22.382812 2.960938 Z M 22.382812 2.960938 '/%3E%3C/g%3E%3C/svg%3E")
      15 28,
    pointer;
}

.guitar-frets-nums {
  position: absolute;
  top: -4rem;
  display: flex;
  justify-content: space-around;
  width: calc(100% - 100% / 6);
  transform: translateX(calc(100% / 12 + 0.6rem));
  cursor: auto;
}

.guitar-fret-num {
  font-size: 2rem;
  font-weight: bold;
}

.guitar-frets {
  position: absolute;
  top: 0;
  display: flex;
  justify-content: space-around;
  width: 100%;
  height: 100%;
}

.guitar-fret {
  width: $fret-line-weight;
  height: 100%;
  background-color: $fret-line-color;
  box-shadow: 0 0 5px brown;
}

.guitar-strings-names {
  position: absolute;
  left: -3rem;
  width: 2rem;
  height: 100%;
  line-height: 1.3;
  font-size: 2rem;
  cursor: auto;
}

.guitar-strings {
  position: absolute;
  display: flex;
  justify-content: space-around;
  flex-direction: column;
  width: 100%;
  height: calc(100% - (2 * #{$guitar-neck-padding}));
}

.guitar-string {
  width: 100%;
  height: $string-weight;
  font-size: 1.8rem;
  background-color: $strings-color;
  box-shadow: 0 0 5px black;
}

.picked-notes {
  display: flex;
  flex-direction: column;
  width: calc(100% - #{$fret-line-weight} - 100% / 6);
  height: 100%;
  transform: translateX(3.5rem);
}

.picked-string {
  width: 100%;
  height: calc(100% / 6);
}

.string-picks {
  display: flex;
}

.note {
  position: relative;
  width: 20%;
  display: flex;
  justify-content: center;
  align-items: center;

  &.on-left-button {
    background: $action-color;
  }

  &:hover {
    opacity: 0.5;
  }

  &::before {
    content: "";
    position: absolute;
    width: $string-mark-radius;
    height: $string-mark-radius;
    background-color: white;
    border-radius: 50%;
  }
}

.picked-note::before {
  background-color: $primary-color;
}

.heading {
  display: block;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  font-size: 3rem;
  text-transform: uppercase;
  opacity: 0;
  animation: appear 1s $animation-time ease forwards; 
}

.string-animation {
  animation: vibration 0.4s ease-in-out;
}

@keyframes appear {
  100% {
    opacity: 1;
  }
}

@keyframes vibration {
  0% {
    transform: translateY(5px);
  }
  25% {
    transform: translateY(-4px);
  }
  50% {
    transform: translateY(3px);
  }
  75% {
    transform: translateY(-2px);
  }
  90% {
    transform: translateY(1px);
  }
}

.footer {
  width: 100%;
  padding: 1rem 0;
  background-color: $secondary-color;
  text-align: center;
  font-size: 2.5rem;
}

@media (max-width: 700px) {
  html {
    font-size: 50%;
  }
}
